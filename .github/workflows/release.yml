name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  pypi_build:
    name: Build and Publish Python Package on Ubuntu
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # Required for OIDC authentication with PyPI
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies for PyPI package
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build Python package
        run: |
          python -m build

      - name: Upload package artifact
        uses: actions/upload-artifact@v4  # Updated to v4
        with:
          name: package-dist
          path: dist/*
          if-no-files-found: error  # Fail if no files are found
          retention-days: 1  # Only keep for 1 day since this is just for the release

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          packages-dir: dist

  exe_build:
    name: Build Standalone Executable on Windows
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies for executable
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller Pillow sip
          pip install -r requirements.txt

      - name: Build Standalone Executable
        run: |
          mkdir exe-dist
          pyinstaller --noconsole --onefile --icon=docs/images/test.jpg --name Authipy --distpath exe-dist src/authipy/main.py

      - name: Upload executable artifact
        uses: actions/upload-artifact@v4  # Updated to v4
        with:
          name: exe-dist
          path: exe-dist/*
          if-no-files-found: error  # Fail if no files are found
          retention-days: 1  # Only keep for 1 day since this is just for the release

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [pypi_build, exe_build]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download package artifact
        uses: actions/download-artifact@v4  # Updated to v4
        with:
          name: dist
          path: dist

      - name: Download executable artifact
        uses: actions/download-artifact@v4  # Updated to v4
        with:
          name: exe-dist
          path: exe-dist
          # Adding error handling if artifacts are not found
          if-no-artifact-found: error

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          files: |
            dist/*
            exe-dist/*
          generate_release_notes: true
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
